{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexport default function userReducer(state, action) {\n  var response, _iterator, _step, iterator;\n\n  return _regeneratorRuntime.async(function userReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = action.type;\n          _context.next = _context.t0 === \"updateName\" ? 3 : 14;\n          break;\n\n        case 3:\n          console.log(state);\n          state[0].employee_name = \"Bekir\";\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"http://dummy.restapiexample.com/api/v1/employees\"));\n\n        case 7:\n          response = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 10:\n          response = _context.sent;\n          console.log(response.data);\n\n          for (_iterator = _createForOfIteratorHelperLoose(response.data); !(_step = _iterator()).done;) {\n            iterator = _step.value;\n            state.push(iterator);\n          }\n\n          return _context.abrupt(\"return\", _toConsumableArray(state));\n\n        case 14:\n          return _context.abrupt(\"return\", state);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/yagibasan/Desktop/Expo/ExpoDemo/redux/reducer/userReducer.js"],"names":["userReducer","state","action","type","console","log","employee_name","fetch","response","json","data","iterator","push"],"mappings":";;;;;;;;;AAAA,eAAe,SAAeA,WAAf,CAA2BC,KAA3B,EAAkCC,MAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACLA,MAAM,CAACC,IADF;AAAA,0CAEN,YAFM;AAAA;;AAAA;AAGTC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAA,UAAAA,KAAK,CAAC,CAAD,CAAL,CAASK,aAAT,GAAyB,OAAzB;AAJS;AAAA,2CAMYC,KAAK,CAAC,kDAAD,CANjB;;AAAA;AAMLC,UAAAA,QANK;AAAA;AAAA,2CAOQA,QAAQ,CAACC,IAAT,EAPR;;AAAA;AAOTD,UAAAA,QAPS;AASTJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACE,IAArB;;AACA,2DAAuBF,QAAQ,CAACE,IAAhC,iCAAsC;AAA3BC,YAAAA,QAA2B;AACpCV,YAAAA,KAAK,CAACW,IAAN,CAAWD,QAAX;AACD;;AAZQ,8DAaEV,KAbF;;AAAA;AAAA,2CAiCFA,KAjCE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function userReducer(state, action) {\n  switch (action.type) {\n    case \"updateName\":\n      console.log(state);\n      state[0].employee_name = \"Bekir\";\n\n      let response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n      response = await response.json();\n\n      console.log(response.data);\n      for (const iterator of response.data) {\n        state.push(iterator);\n      }\n      return [...state];\n\n    // fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n    //   .then((res) => res.json())\n    //   .then((res) => {\n    //     if (res.error) {\n    //       throw res.error;\n    //     }\n    //     console.log(res);\n\n    //     for (const iterator of res.data) {\n    //       state.push(iterator);\n    //     }\n    //     return [...state];\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}