{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_CONFIG = {\n  cycles: 1,\n  useNativeDriver: true\n};\n\nvar Animation = function () {\n  function Animation(config) {\n    var _this = this;\n\n    _classCallCheck(this, Animation);\n\n    this.counter = 0;\n    this.running = false;\n\n    this.onAnimationEnd = function (result) {\n      _this.counter += 1;\n\n      if (_this.counter === _this.config.cycles) {\n        _this.stop();\n      }\n\n      if (_this.running) {\n        _this.start(_this.endCallback);\n      }\n\n      if (!_this.running) {\n        _this.counter = 0;\n        _this.endCallback && _this.endCallback(result);\n        _this.endCallback = null;\n      }\n    };\n\n    this.config = _extends(_extends({}, exports.DEFAULT_CONFIG), config);\n  }\n\n  _createClass(Animation, [{\n    key: \"start\",\n    value: function start(callback) {\n      this.endCallback = callback;\n      this.running = true;\n      this.animation.start(this.onAnimationEnd);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.running = false;\n      this.animation.stop();\n    }\n  }, {\n    key: \"isAnimating\",\n    value: function isAnimating() {\n      return this.running;\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      this.stop();\n    }\n  }]);\n\n  return Animation;\n}();\n\nexports.Animation = Animation;","map":{"version":3,"sources":["../../../lib/animation/animation.ts"],"names":[],"mappings":";;;;;;;;;;;AAEa,OAAA,CAAA,cAAA,GAAkC;AAC7C,EAAA,MAAM,EAAE,CADqC;AAE7C,EAAA,eAAe,EAAE;AAF4B,CAAlC;;IAeS,S;AAUpB,qBAAY,MAAZ,EAAsB;AAAA;;AAAA;;AAPZ,SAAA,OAAA,GAAkB,CAAlB;AAEA,SAAA,OAAA,GAAmB,KAAnB;;AA+CA,SAAA,cAAA,GAAiB,UAAC,MAAD,EAAqC;AAC9D,MAAA,KAAI,CAAC,OAAL,IAAgB,CAAhB;;AACA,UAAI,KAAI,CAAC,OAAL,KAAiB,KAAI,CAAC,MAAL,CAAY,MAAjC,EAAyC;AACvC,QAAA,KAAI,CAAC,IAAL;AACD;;AACD,UAAI,KAAI,CAAC,OAAT,EAAkB;AAChB,QAAA,KAAI,CAAC,KAAL,CAAW,KAAI,CAAC,WAAhB;AACD;;AACD,UAAI,CAAC,KAAI,CAAC,OAAV,EAAmB;AACjB,QAAA,KAAI,CAAC,OAAL,GAAe,CAAf;AACA,QAAA,KAAI,CAAC,WAAL,IAAoB,KAAI,CAAC,WAAL,CAAiB,MAAjB,CAApB;AACA,QAAA,KAAI,CAAC,WAAL,GAAmB,IAAnB;AACD;AACF,KAbS;;AAzCR,SAAK,MAAL,GAAW,SAAA,SAAA,EAAA,EACN,OAAA,CAAA,cADM,CAAA,EAEN,MAFM,CAAX;AAID;;;;0BAMY,Q,EAA+B;AAC1C,WAAK,WAAL,GAAmB,QAAnB;AACA,WAAK,OAAL,GAAe,IAAf;AAEA,WAAK,SAAL,CAAe,KAAf,CAAqB,KAAK,cAA1B;AACD;;;2BAKU;AACT,WAAK,OAAL,GAAe,KAAf;AAEA,WAAK,SAAL,CAAe,IAAf;AACD;;;kCAKiB;AAChB,aAAO,KAAK,OAAZ;AACD;;;8BAEa;AACZ,WAAK,IAAL;AACD;;;;;;AA9CH,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_CONFIG = {\n    cycles: 1,\n    useNativeDriver: true,\n};\n/**\n * Base animation class. Creates `Animated.Value` and maps it to props of `Animated.View`\n */\nclass Animation {\n    constructor(config) {\n        this.counter = 0;\n        this.running = false;\n        /**\n         * Default animation completion callback.\n         * Will run animation again if it is not stopped or it should stop regarding to `cycles` property\n         */\n        this.onAnimationEnd = (result) => {\n            this.counter += 1;\n            if (this.counter === this.config.cycles) {\n                this.stop();\n            }\n            if (this.running) {\n                this.start(this.endCallback);\n            }\n            if (!this.running) {\n                this.counter = 0;\n                this.endCallback && this.endCallback(result);\n                this.endCallback = null;\n            }\n        };\n        this.config = Object.assign(Object.assign({}, exports.DEFAULT_CONFIG), config);\n    }\n    /**\n     * Starts the animation\n     * @param callback {Animated.EndCallback} - function to execute on animation end.\n     */\n    start(callback) {\n        this.endCallback = callback;\n        this.running = true;\n        this.animation.start(this.onAnimationEnd);\n    }\n    /**\n     * Stops the animation\n     */\n    stop() {\n        this.running = false;\n        this.animation.stop();\n    }\n    /**\n     * @returns true if animation is currently running\n     */\n    isAnimating() {\n        return this.running;\n    }\n    release() {\n        this.stop();\n    }\n}\nexports.Animation = Animation;\n//# sourceMappingURL=animation.js.map"]},"metadata":{},"sourceType":"script"}