{"ast":null,"code":"var _jsxFileName = \"/Users/yagibasan/Desktop/Expo/ExpoDemo/redux/components/List.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useContext } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { MainContext } from \"../store/Store\";\n\nvar List = function List() {\n  var _useContext = useContext(MainContext),\n      state = _useContext.state;\n\n  console.log(\"state\", state);\n  var item = [];\n  var index = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(state || []), _step; !(_step = _iterator()).done;) {\n    var iterator = _step.value;\n    index++;\n    var key = index.toString();\n    item.push(React.createElement(Text, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, iterator.employee_name, \" - \", iterator.employee_age));\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, item);\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/yagibasan/Desktop/Expo/ExpoDemo/redux/components/List.js"],"names":["React","useContext","MainContext","List","state","console","log","item","index","iterator","key","toString","push","employee_name","employee_age"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;;;AAIA,SAASC,WAAT;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,oBACCF,UAAU,CAACC,WAAD,CADX;AAAA,MACTE,KADS,eACTA,KADS;;AAGjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,MAAIG,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,uDAAuBJ,KAAK,IAAI,EAAhC,wCAAoC;AAAA,QAAzBK,QAAyB;AAClCD,IAAAA,KAAK;AACL,QAAME,GAAG,GAAGF,KAAK,CAACG,QAAN,EAAZ;AACAJ,IAAAA,IAAI,CAACK,IAAL,CACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEF,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACI,aADZ,SAC8BJ,QAAQ,CAACK,YADvC,CADF;AAKD;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,IAAP,CAAP;AACD,CAjBD;;AAmBA,eAAeJ,IAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View, Button } from \"react-native\";\n\n// load main context\nimport { MainContext } from \"../store/Store\";\n\nconst List = () => {\n  const { state } = useContext(MainContext);\n\n  console.log(\"state\", state);\n  let item = [];\n  let index = 0;\n  for (const iterator of state || []) {\n    index++;\n    const key = index.toString();\n    item.push(\n      <Text key={key}>\n        {iterator.employee_name} - {iterator.employee_age}\n      </Text>\n    );\n  }\n\n  return <View>{item}</View>;\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}